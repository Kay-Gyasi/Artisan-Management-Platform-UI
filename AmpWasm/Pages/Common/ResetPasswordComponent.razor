@page "/reset-password/{Phone}/{Code}"
@using System.ComponentModel.DataAnnotations
@layout AuthLayout
@inject NotificationService ToastService
@inject UserService UserService
@inject NavigationService Navigator

<!--begin::Main-->
<div class="d-flex flex-column flex-root">
	<!--begin::Authentication - New password -->
	<div class="d-flex flex-column flex-lg-row flex-column-fluid">
		<!--begin::Aside-->
		<div class="d-flex flex-column flex-lg-row-auto w-xl-600px positon-xl-relative" style="background-color: #F2C98A">
			<!--begin::Wrapper-->
			<div class="d-flex flex-column position-xl-fixed top-0 bottom-0 w-xl-600px scroll-y">
				<!--begin::Content-->
				<div class="d-flex flex-row-fluid flex-column text-center p-10 pt-lg-20">
					<!--begin::Logo-->
					<a @onclick="Navigator.NavigateToLanding" class="py-9 mb-5">
						<img alt="Logo" src="assets/media/xaml.ico" class="h-60px" />
					</a>
					<!--end::Logo-->
					<!--begin::Title-->
					<h1 class="fw-bolder fs-2qx pb-5 pb-md-10" style="color: #986923;">Welcome to AMP</h1>
					<!--end::Title-->
					<!--begin::Description-->
					<p class="fw-bold fs-2" style="color: #986923;">Discover Amazing Artisans
					<br />with great professionalism</p>
					<!--end::Description-->
				</div>
				<!--end::Content-->
				<!--begin::Illustration-->
				<div class="d-flex flex-row-auto bgi-no-repeat bgi-position-x-center bgi-size-contain bgi-position-y-bottom min-h-100px min-h-lg-350px" 
				     style="background-image: url(assets/media/13.png)"></div>
				<!--end::Illustration-->
			</div>
			<!--end::Wrapper-->
		</div>
		<!--end::Aside-->
		<!--begin::Body-->
		<div class="d-flex flex-column flex-lg-row-fluid py-10">
			<!--begin::Content-->
			<div class="d-flex flex-center flex-column flex-column-fluid">
				<!--begin::Wrapper-->
				<div class="w-lg-550px p-10 p-lg-15 mx-auto">
					<!--begin::Form-->
					<EditForm Model="Pass" OnValidSubmit="Submit" class="form w-100" id="kt_new_password_form">
						<DataAnnotationsValidator />
						<!--begin::Heading-->
						<div class="text-center mb-10">
							<!--begin::Title-->
							<h1 class="text-dark mb-3">Setup New Password</h1>
							<!--end::Title-->
							<!--begin::Link-->
							<div class="text-gray-400 fw-bold fs-4">Already have reset your password?
								<a @onclick="Navigator.NavigateToLogin" class="link-primary fw-bolder">Sign in here</a></div>
							<!--end::Link-->
						</div>
						<!--begin::Heading-->
						<!--begin::Input group-->
						<div class="mb-10 fv-row" data-kt-password-meter="true">
							<!--begin::Wrapper-->
							<div class="mb-1">
								<!--begin::Label-->
								<label class="form-label fw-bolder text-dark fs-6">Password</label>
								<!--end::Label-->
								<!--begin::Input wrapper-->
								<div class="position-relative mb-3">
									<InputText @bind-Value="Pass.Password" class="form-control form-control-lg form-control-solid" type="password" placeholder="" name="password" autocomplete="off"/>
									<ValidationMessage For="() => Pass.Password"></ValidationMessage>
									@*<span class="btn btn-sm btn-icon position-absolute translate-middle top-50 end-0 me-n2" data-kt-password-meter-control="visibility">
										<i class="bi bi-eye-slash fs-2"></i>
										<i class="bi bi-eye fs-2 d-none"></i>
									</span>*@
								</div>
								<!--end::Input wrapper-->
								<!--begin::Meter-->
								<div class="d-flex align-items-center mb-3" data-kt-password-meter-control="highlight">
									<div class="flex-grow-1 bg-secondary bg-active-success rounded h-5px me-2"></div>
									<div class="flex-grow-1 bg-secondary bg-active-success rounded h-5px me-2"></div>
									<div class="flex-grow-1 bg-secondary bg-active-success rounded h-5px me-2"></div>
									<div class="flex-grow-1 bg-secondary bg-active-success rounded h-5px"></div>
								</div>
								<!--end::Meter-->
							</div>
							<!--end::Wrapper-->
							<!--begin::Hint-->
							<div class="text-muted">Use 8 or more characters with a mix of letters, numbers &amp; symbols.</div>
							<!--end::Hint-->
						</div>
						<!--end::Input group=-->
						<!--begin::Input group=-->
						<div class="fv-row mb-10">
							<label class="form-label fw-bolder text-dark fs-6">Confirm Password</label>
							<InputText @bind-Value="Pass.ConfirmPassword" class="form-control form-control-lg form-control-solid" type="password" placeholder="" name="confirm-password" autocomplete="off"/>
							<ValidationMessage For="() => Pass.ConfirmPassword"></ValidationMessage>
						</div>
						<!--end::Input group=-->

						<!--begin::Action-->
						<div class="text-center">
							<button type="submit" id="kt_new_password_submit" class="btn btn-lg btn-primary fw-bolder"
							        disabled="@IsLoading">
								<span class="indicator-label">Submit</span>
								<span class="indicator-progress">Please wait...
									<span class="spinner-border spinner-border-sm align-middle ms-2"></span></span>
							</button>
						</div>
						<!--end::Action-->
					</EditForm>
					<!--end::Form-->
				</div>
				<!--end::Wrapper-->
			</div>
			<!--end::Content-->
			<!--begin::Footer-->
			<div class="d-flex flex-center flex-wrap fs-6 p-5 pb-0">
				<!--begin::Links-->
				<div class="d-flex flex-center fw-bold fs-6">
					<a href="https://keenthemes.com" class="text-muted text-hover-primary px-2" target="_blank">About</a>
					<a href="https://keenthemes.com/support" class="text-muted text-hover-primary px-2" target="_blank">Support</a>
					<a href="https://1.envato.market/EA4JP" class="text-muted text-hover-primary px-2" target="_blank">Purchase</a>
				</div>
				<!--end::Links-->
			</div>
			<!--end::Footer-->
		</div>
		<!--end::Body-->
	</div>
	<!--end::Authentication - New password-->
</div>
<!--end::Main-->
@code {
	[Parameter] public string Phone { get; set; }
	[Parameter] public string Code { get; set; }
	ResetPass Pass { get; set; } = new();
	bool IsLoading { get; set; }

	private async Task Submit()
	{
		DisableButton(true);
		var response = await UserService.ResetPassword(Phone, Code, Pass.Password);
		if (response == "success")
		{
			ToastService.PassResetSuccess();
			Navigator.NavigateToLogin();
			return;
		}
        
		ToastService.PassResetFailed();
		DisableButton(false);
	}

	class ResetPass
	{
		[DataType(DataType.Password)]
		public string Password { get; set; }
		
		[Compare("Password", ErrorMessage = "Passwords do not match")]
		public string ConfirmPassword { get; set; }
	}

	void DisableButton(bool isLoading)
	{
		IsLoading = isLoading;
		StateHasChanged();
	}

}