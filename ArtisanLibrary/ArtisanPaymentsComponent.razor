@page "/artisan/payments"
@using System.Globalization
@inject AuthService AuthStateService
@inject PaymentService PaymentService
@inject NavigationService Navigator

<PageTitle>Orders</PageTitle>

<!--begin::Form-->
<EditForm Model="SearchObj" OnSubmit="Submit">
	<!--begin::Card-->
	<div class="card mb-7">
		<!--begin::Card body-->
		<div class="card-body">
			<!--begin::Compact form-->
			<div class="d-flex align-items-center">
				<!--begin::Input group-->
				<div class="position-relative w-md-400px me-md-2">
					<!--begin::Svg Icon | path: icons/duotune/general/gen021.svg-->
					<span class="svg-icon svg-icon-3 svg-icon-gray-500 position-absolute top-50 translate-middle ms-6">
						<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
							<rect opacity="0.5" x="17.0365" y="15.1223" width="8.15546" height="2" rx="1" transform="rotate(45 17.0365 15.1223)" fill="black"/>
							<path d="M11 19C6.55556 19 3 15.4444 3 11C3 6.55556 6.55556 3 11 3C15.4444 3 19 6.55556 19 11C19 15.4444 15.4444 19 11 19ZM11 5C7.53333 5 5 7.53333 5 11C5 14.4667 7.53333 17 11 17C14.4667 17 17 14.4667 17 11C17 7.53333 14.4667 5 11 5Z" fill="black"/>
						</svg>
					</span>
					<!--end::Svg Icon-->
					<InputText @bind-Value="SearchObj.SearchTerm" type="text" class="form-control form-control-solid ps-10" name="search" placeholder="Search"/>
				</div>
				<!--end::Input group-->
				<!--begin:Action-->
				<div class="d-flex align-items-center">
					<button type="submit" class="btn btn-primary me-5"
							disabled="@IsLoading">Search</button>
				</div>
				<!--end:Action-->
			</div>
		</div>
		<!--end::Card body-->
	</div>
	<!--end::Card-->
</EditForm>
<!--end::Form-->

<!--begin::Container-->
	<!--begin::Row-->
<div class="row g-5 g-xl-8">
	@if (Payments.Data.Count < 1 || Payments.Data == null)
    {
    	<div class="col-12 justify-content-center text-center">
    		<h3>You have not received any payments</h3>
    	</div>
    }
	else
	{
		@foreach (var payment in Payments.Data)
		{
			<div class="col-xl-4" style="cursor:pointer">
				<!--begin::Statistics Widget 1-->
				<div class="card bgi-no-repeat card-xl-stretch mb-xl-8" style="background-position: right top; background-size: 30% auto; background-image: url(assets/media/abstract-4.svg)">
					<!--begin::Body-->
					<div class="card-body">
						<a @onclick="Navigator.NavigateToArtisanPayments" class="card-title fw-bolder text-muted text-hover-primary fs-4">Transaction Reference: @payment.TransactionReference</a>
						@*					<div class="fw-bolder text-primary my-6">Transaction Reference: @payment.TransactionReference</div>
	*@
						@if (IsForwardedToArtisan(payment))
						{
							<span class="badge badge-success ms-1">Forwarded</span>
						}
						else
						{
							<span class="badge badge-danger ms-1">Withheld</span>
						}
						<p class="text-dark-75 fw-bold fs-5 m-0">Amount: @payment.AmountPaid.ToString(CultureInfo.InvariantCulture)</p>
					</div>
					<!--end::Body-->
				</div>
				<!--end::Statistics Widget 1-->
			</div>
		}
	}
</div>
	<!--end::Row-->

<!--end::Container-->

@code {
	Search SearchObj { get; set; } = new();
	bool IsLoading { get; set; }
	PaginatedList<PaymentPageDto> Payments { get; set; } = new();
	PaginatedQuery Query { get; set; } = PaginatedQuery.Build(0, 1, 20);

	protected override async Task OnInitializedAsync()
	{
		await AuthStateService.CheckAuthStatus();
		Payments.Data = new();
	}

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			Payments = await PaymentService.GetPage(Query);
			StateHasChanged();
		}
	}

	async Task Submit()
	{
		DisableButton(true);
		Query.ThenSearch(SearchObj.SearchTerm);
		Payments = await PaymentService.GetPage(Query);
		DisableButton(false);
	}

	void DisableButton(bool isLoading)
	{
		IsLoading = isLoading;
		StateHasChanged();
	}

	static bool IsForwardedToArtisan(PaymentPageDto dto) => dto.IsForwarded;
}
