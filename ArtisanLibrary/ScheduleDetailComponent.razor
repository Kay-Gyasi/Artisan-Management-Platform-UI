@page "/artisan/schedule/{OrderId}"
@using System.Globalization
@inject OrderService OrderService
@inject IMapper Mapper
@inject NotificationService ToastService
@inject AuthService AuthStateService
@inject NavigationService Navigator


<PageTitle>Schedule Details</PageTitle>

<!--begin::details View-->
<div class="card mb-5 mb-xl-10" id="kt_profile_details_view">
	<!--begin::Card header-->
	<div class="card-header cursor-pointer">
		<!--begin::Card title-->
		<div class="card-title m-0">
			<h3 class="fw-bolder m-0">Schedule Details</h3>
		</div>
		<!--end::Card title-->
		@*@if (CostView() != "Not Set")
		{
			<!--begin::Action-->
	        <a @onclick="SetCost" class="btn btn-primary align-self-center float-end me-1">Edit cost</a>
			<!--end::Action-->
		}*@
	</div>
	<!--begin::Card header-->
	<!--begin::Card body-->
	<div class="card-body p-9">
		<!--begin::Row-->
		<div class="row mb-7">
			<!--begin::Label-->
			<label class="col-lg-4 fw-bold text-muted">Customer Name</label>
			<!--end::Label-->
			<!--begin::Col-->
			<div class="col-lg-8">
				<span class="fw-bolder fs-6 text-gray-800">@Order?.Customer.User.DisplayName</span>
			</div>
			<!--end::Col-->
		</div>
		<!--end::Row-->
		<!--begin::Input group-->
		<div class="row mb-7">
			<!--begin::Label-->
			<label class="col-lg-4 fw-bold text-muted">Description</label>
			<!--end::Label-->
			<!--begin::Col-->
			<div class="col-lg-8 fv-row">
				<span class="fw-bold text-gray-800 fs-6">@Order?.Description</span>
			</div>
			<!--end::Col-->
		</div>
		<!--end::Input group-->

		<!--begin::Input group-->
		<div class="row mb-7">
			<!--begin::Label-->
			<label class="col-lg-4 fw-bold text-muted">Cost</label>
			<!--end::Label-->
			<!--begin::Col-->
			<div class="col-lg-8 fv-row">
				<span class="fw-bold text-gray-800 fs-6">@CostView()</span>
			</div>
			<!--end::Col-->
		</div>
		<!--end::Input group-->
		
		<!--begin::Input group-->
        		<div class="row mb-7">
        			<!--begin::Label-->
        			<label class="col-lg-4 fw-bold text-muted">Payment Made</label>
        			<!--end::Label-->
        			<!--begin::Col-->
        			<div class="col-lg-8 fv-row">
        				<span class="fw-bold text-gray-800 fs-6">@PaymentMade()</span>
        			</div>
        			<!--end::Col-->
        		</div>
        		<!--end::Input group-->

		<!--begin::Input group-->
		<div class="row mb-7">
			<!--begin::Label-->
			<label class="col-lg-4 fw-bold text-muted">Preferred Start Date</label>
			<!--end::Label-->
			<!--begin::Col-->
			<div class="col-lg-8 fv-row">
				<span class="fw-bold text-gray-800 fs-6">@Order?.PreferredStartDate.ToShortDateString()</span>
			</div>
			<!--end::Col-->
		</div>
		<!--end::Input group-->

		<!--begin::Input group-->
		<div class="row mb-7">
			<!--begin::Label-->
			<label class="col-lg-4 fw-bold text-muted">Preferred Completion Date</label>
			<!--end::Label-->
			<!--begin::Col-->
			<div class="col-lg-8 fv-row">
				<span class="fw-bold text-gray-800 fs-6">@Order?.PreferredCompletionDate.ToShortDateString()</span>
			</div>
			<!--end::Col-->
		</div>
		<!--end::Input group-->

		<!--begin::Input group-->
		<div class="row mb-7">
			<!--begin::Label-->
			<label class="col-lg-4 fw-bold text-muted">Service</label>
			<!--end::Label-->
			<!--begin::Col-->
			<div class="col-lg-8 fv-row">
				<span class="fw-bold text-gray-800 fs-6">@Order?.Service.Name</span>
			</div>
			<!--end::Col-->
		</div>
		<!--end::Input group-->

		<!--begin::Input group-->
		<div class="row mb-7">
			<!--begin::Label-->
			<label class="col-lg-4 fw-bold text-muted">Contact Phone
			<i class="fas fa-exclamation-circle ms-1 fs-7" data-bs-toggle="tooltip" title="Phone number must be active"></i></label>
			<!--end::Label-->
			<!--begin::Col-->
			<div class="col-lg-8 d-flex align-items-center">
				<a href="tel:@Order?.Customer.User.Contact?.PrimaryContact" class="fw-bolder fs-6 text-gray-800 me-2">
					@Order?.Customer.User.Contact?.PrimaryContact
				</a>
			</div>
			<!--end::Col-->
		</div>
		<!--end::Input group-->

		<!--begin::Input group-->
		<div class="row mb-7">
			<!--begin::Label-->
			<label class="col-lg-4 fw-bold text-muted">Work Address</label>
			<!--end::Label-->
			<!--begin::Col-->
			<div class="col-lg-8">
				<span class="fw-bold fs-6 text-gray-800 text-hover-primary">@Order?.WorkAddress.Town, @Order?.WorkAddress.StreetAddress</span>
			</div>
			<!--end::Col-->
		</div>
		<!--end::Input group-->
		
		<div class="card-footer">
			@if (Order is {IsArtisanComplete: true })
			{
				<!--begin::Notice-->
				<div class="notice d-flex bg-light-warning rounded border-warning border border-dashed p-6">
					<!--begin::Icon-->
					<!--begin::Svg Icon | path: icons/duotune/general/gen044.svg-->
					<span class="svg-icon svg-icon-2tx svg-icon-warning me-4">
						<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
							<rect opacity="0.3" x="2" y="2" width="20" height="20" rx="10" fill="black" />
							<rect x="11" y="14" width="7" height="2" rx="1" transform="rotate(-90 11 14)" fill="black" />
							<rect x="11" y="17" width="2" height="2" rx="1" transform="rotate(-90 11 17)" fill="black" />
						</svg>
					</span>
					<!--end::Svg Icon-->
					<!--end::Icon-->
					<!--begin::Wrapper-->
					<div class="d-flex flex-stack flex-grow-1">
						<!--begin::Content-->
						<div class="fw-bold">
							<h4 class="text-gray-900 fw-bolder">Order completed!</h4>
							<div class="fs-6 text-gray-700">Pending completion from customer.</div>
							<!--end::Content-->
						</div>
						<!--end::Wrapper-->
					</div>
					<!--end::Notice-->
				</div>
			}
			else
			{
				<!--begin::Action-->
				<a class="btn btn-danger align-self-center float-end" disabled="@IsLoading"
				   @onclick="@(() => UnassignArtisan(OrderId))">Cancel</a>
				@if (CostView() != "Not Set")
				{
					<a @onclick="Complete" class="btn btn-primary align-self-center float-end me-1">Complete</a>
				}
				else
				{
					<a @onclick="SetCost" class="btn btn-primary align-self-center float-end me-1">Set cost</a>
				}
				<!--end::Action-->
			}
		</div>
	</div>
	<!--end::Card body-->
</div>
<!--end::details View-->

@code {
	[CascadingParameter] public IModalService Modal { get; set; }
	[Parameter]
	public string OrderId { get; set; }
	bool IsLoading { get; set; }

	private OrderDto? Order { get; set; } = new();

	protected override async Task OnInitializedAsync()
	{
		await AuthStateService.CheckAuthStatus();
		InitializeProperties();
	}
	
	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			Order = await OrderService.GetAsync(OrderId);
			StateHasChanged();
		}
	}

	void InitializeProperties()
	{
		Order.Artisan = new()
		{
			User = new()
		};
		Order.Customer = new()
		{
			User = new()
			{
				Contact = new()
			}
		};
		Order.Service = new();
		Order.WorkAddress = new();
	}

	void UnassignArtisan(string orderId)
	{
		var parameters = new ModalParameters();
		parameters.Add(nameof(CancelScheduleComponent.OrderId), orderId);

		Modal.Show<CancelScheduleComponent>("Cancel Schedule", parameters);
	}

	void SetCost()
	{
		var parameters = new ModalParameters();
		parameters.Add(nameof(SetCostComponent.OrderId), OrderId);
		parameters.Add(nameof(SetCostComponent.OrderService), OrderService);
		parameters.Add(nameof(SetCostComponent.Navigator), Navigator);
		parameters.Add(nameof(SetCostComponent.ToastService), ToastService);

		Modal.Show<SetCostComponent>("Set cost", parameters);
	}

	string CostView() 
		=> Order?.Cost <= 0 ? "Not Set" : Order?.Cost.ToString(CultureInfo.InvariantCulture);

	async Task Complete()
	{
		DisableButton(true);
		
		var response = await OrderService.ArtisanComplete(OrderId);
		if (response.IsComplete)
		{
			Navigator.NavigateToScheduleDetailForceLoad(OrderId);
			return;
		}
		ToastService.ShowOrderCompleteFailed();
		DisableButton(false);
	}

	void DisableButton(bool isLoading)
	{
		IsLoading = isLoading;
		StateHasChanged();
	}
	
	string PaymentMade() 
		=> Order?.PaymentMade <= 0 ? "No payment made" : Order?.PaymentMade.ToString(CultureInfo.InvariantCulture);

}