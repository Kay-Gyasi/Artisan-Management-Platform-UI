@page "/customer/image"
@using AMP.Web.Models.Authentication
@using AMP.Web.Models.Services.Workers
@inject AuthService AuthStateService
@inject TokenServerAuthenticationStateProvider TokenServer
@inject UserService UserService
@inject NavigationService Navigator
@inject NotificationService ToastService
@layout CustomerProfileLayout
@inject IJSRuntime JsInterop

<div class="card mb-5 mb-xl-10">
<!--begin::Card header-->
<div class="card-header border-0 cursor-pointer" role="button" data-bs-toggle="collapse" 
     data-bs-target="#kt_account_profile_details" aria-expanded="true" aria-controls="kt_account_profile_details"
     tabindex="0" @ref="_cimagBody">
    <!--begin::Card title-->
    <div class="card-title m-0">
        <h3 class="fw-bolder m-0">Current Image</h3>
    </div>
    <!--end::Card title-->
</div>
<!--begin::Card header-->
<!--begin::Content-->
<div id="kt_account_profile_details" class="collapse show">
        <!--begin::Card body-->
        <div class="card-body border-top p-9">
            <!--begin::Input group-->
            <div class="row mb-6">
                <!--begin::Label-->
                <label class="col-lg-4 col-form-label fw-bold fs-6">Avatar</label>
                <!--end::Label-->
                <!--begin::Col-->
                <div class="col-lg-8">
                    <!--begin::Image input-->
                    <div class="image-input image-input-outline" data-kt-image-input="true" style="background-image: url(@ImageUrl)">
                        <!--begin::Preview existing avatar-->
                        <div class="image-input-wrapper w-125px h-125px" style="background-image: url(@ImageUrl)"></div>
                        <!--end::Preview existing avatar-->
                        <!--begin::Label-->
                        <label class="btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow" data-kt-image-input-action="change" data-bs-toggle="tooltip" title="Change avatar">
                            <i class="bi bi-pencil-fill fs-7"></i>
                            <!--begin::Inputs-->
                            <BlazorInputFile.InputFile OnChange="HandleSelectedFile"></BlazorInputFile.InputFile>
                            <input type="hidden" name="avatar_remove"/>
                            <!--end::Inputs-->
                        </label>
                        <!--end::Label-->
                        <!--begin::Cancel-->
                        <span class="btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow" data-kt-image-input-action="cancel" data-bs-toggle="tooltip" title="Cancel avatar">
                            <i class="bi bi-x fs-2"></i>
                        </span>
                        <!--end::Cancel-->
                        <!--begin::Remove-->
                        <span class="btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow" data-kt-image-input-action="remove" data-bs-toggle="tooltip" title="Remove avatar">
                            <i class="bi bi-x fs-2"></i>
                        </span>
                        <!--end::Remove-->
                    </div>
                    <!--end::Image input-->
                    <!--begin::Hint-->
                    <div class="form-text">Allowed file types: png, jpg, jpeg.</div>
                    <!--end::Hint-->
                    

                    <!--begin::Hint-->
                    <div class="form-text">Selected File: @_fileName</div>
                    <!--end::Hint-->
                </div>
                <!--end::Col-->
            </div>
            <!--end::Input group-->
        </div>
        
        <!--begin::Actions-->
        <div class="card-footer d-flex justify-content-end py-6 px-9">
            
        </div>
        <!--end::Actions-->
</div>
</div>
@code {
    ElementReference _cimagBody;
    IFileListEntry _file;
    string ImageUrl { get; set; }
    bool IsLoading { get; set; }
    ImageCommand Image { get; set; } = new();

    string _fileName = "";
    protected override async Task OnInitializedAsync()
    {
		await AuthStateService.CheckAuthStatus();
        await JsInterop.InvokeVoidAsync("SetFocusToElement", _cimagBody);
        FileToServerUpload.IsDone += async () =>
        {
            var response = await UserService.GetRefreshToken();
            if (response is not null && !string.IsNullOrEmpty(response.Token)) await TokenServer.SetTokenAsync(response.Token);
            Navigator.NavigateToCustomerImageForceLoad();
        };
    }
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            ImageUrl = await AuthStateService.GetClaim("ImageUrl");
            if (string.IsNullOrEmpty(ImageUrl)) ImageUrl = "https://res.cloudinary.com/kay-gyasi/image/upload/v1664598169/EPMS_Login_kdthcn.png";
            StateHasChanged();
        }
    }

    async Task HandleSelectedFile(IFileListEntry[] files)
    {
        try
        {
            _file = files.FirstOrDefault();
            if (!FileIsImage())
            {
                ToastService.ShowInvalidFile();
                return;
            }

            FileToServerUpload.Image = _file;
            FileToServerUpload.AuthToken = await TokenServer.GetTokenAsync();
            StateHasChanged();
            ToastService.ShowImageUploadStartup();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }

    bool FileIsImage() => _file != null && _file.Type.Contains("image");
}
